{
	"info": {
		"_postman_id": "39747002-3f66-4e76-b219-0e5ceec1d8e4",
		"name": "ReqRes",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "List users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac489251-57a1-4bd3-9a32-4faab7dc0921",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Correct page\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.page).to.eql(2);",
							"});",
							"pm.test(\"Correct page entries\", function () {",
							"    var jData = pm.response.json();",
							"    pm.expect(jData.page).to.eql(2);",
							"});",
							"pm.test(\"Total number of pages \", function () {",
							"    var jD = pm.response.json();",
							"    pm.expect(jD.total).to.eql(12);",
							"});",
							"pm.test(\"Correct entries per page\", function () {",
							"    var jsondata = pm.response.json();",
							"    pm.expect(jsondata.per_page).to.eql(6);",
							"});",
							"pm.test(\"Correct first user id\", function () {",
							"    var j = pm.response.json();",
							"    pm.expect(j.data[0].id).to.eql(7);",
							"});",
							"pm.test(\"If a user called george exists\", function () {",
							"    var j = pm.response.json();",
							"    var array=j.data;",
							"    let george=false;",
							"    for (let i=0;i<array.length;++i){",
							"        if (array[i].first_name=='George'){",
							"            george=true;",
							"            break;",
							"        }",
							"    }",
							"    pm.expect(george).to.eql(true)",
							"",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "da4005b3-fc78-4c73-9bc6-47d93c4bfd87",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "2a065fd0-4ce9-4ae8-bd89-f1130ac6a44e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"followRedirects": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}api/users?page=2",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List single user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "574e64dc-b380-4e11-9ed8-83755cfdc382",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Checking if fields: id, email, first_name, last_name and avatar exists\", function () {",
							"    var Fields = pm.response.json();",
							"    pm.expect(Fields.data.id).to.exist;",
							"    pm.expect(Fields.data.email).to.exist;",
							"    pm.expect(Fields.data.first_name).to.exist;",
							"    pm.expect(Fields.data.last_name).to.exist;",
							"    pm.expect(Fields.data.avatar).to.exist;",
							"});",
							"pm.test(\"Checking correct email format \", function(){",
							"    var mail=pm.response.json();",
							"    let emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;",
							"    pm.expect(mail.data.email).to.match(emailRegex)",
							"})",
							"pm.test(\"Correct user fetched\", function () {",
							"    var ID =pm.environment.get(\"UserId\");",
							"    var userid = pm.response.json();",
							"    pm.expect(userid.data.id).to.eql(ID);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b946df14-d66e-4bab-9b20-adc8987576f5",
						"exec": [
							"const randomValue = Math.floor(Math.random() * 12) + 1;",
							"pm.environment.set(\"UserId\", randomValue);",
							"// let randomvalue = [];",
							"// for (let x = 1; x <= 12; x++) {",
							"//     randomvalue[x] = x ;",
							"// }",
							"// const idx = Math.floor(Math.random() * randomvalue.length);",
							"// const picked = randomvalue[idx];",
							"// console.log(\"Random pick:\", picked);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "e84ff85d-2563-4572-8f2f-cd18d07ef8f8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": "{{base_url}}api/users/{{UserId}}"
			},
			"response": []
		},
		{
			"name": "List a user not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c13f02a-a5af-4f37-a6d5-69e2011fe105",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "100dca62-df39-4100-966e-33d0a080b226",
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"id": "cdf1ab0b-ad28-41e4-87da-4c02f9e7a822",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": "{{base_url}}api/users/23"
			},
			"response": []
		},
		{
			"name": "List single resource",
			"id": "e234301b-5c2f-4acc-900d-fc8c05f4bc3d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": "{{base_url}}api/unknown/2"
			},
			"response": []
		},
		{
			"name": "List resource not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3fbd649e-7eed-4263-a0e7-e5b852831b3b",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "312a1075-5306-4eff-81db-0d99bfb54d5e",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "8a822414-1532-4ac0-b845-e09d2dff35b4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": "{{base_url}}api/unknown/23"
			},
			"response": []
		},
		{
			"name": "Create a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "794c8507-27ff-45d7-87b9-4fd341caea77",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b727f7ba-543e-4fa8-a634-d98c4dda4c25",
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"id": "3e888b45-84dc-4cf3-b094-08e59277a049",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}api/uses"
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4d88685d-a33c-4850-b957-fc5863def5f2",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "df3ead7c-3e60-487e-ba18-6f28cfc8caf9",
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"id": "96711d0e-171d-452b-a42e-ccf9ba245237",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": "{{base_url}}api/users/2"
			},
			"response": []
		},
		{
			"name": "Update user (patch)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d7589683-cabd-49a0-b981-07fd82acf8db",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "dd810297-0d79-40b3-b6ba-59db19a76479",
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"id": "8da9087c-b61f-44f2-8cec-f56289d9c011",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n}"
				},
				"url": "{{base_url}}api/users/2"
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0f29cd08-a2f6-4ac1-b797-84a1126aa709",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "9a917637-b3b6-4d8d-9754-62a756335b17",
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"id": "228963f5-dd79-4cad-af31-2cbdf327e5da",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n}"
				},
				"url": "{{base_url}}api/users/2"
			},
			"response": []
		},
		{
			"name": "Register-successfully",
			"id": "04fe376e-328a-445c-bdea-cb4313db9ad7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"pistol\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}api/register"
			},
			"response": []
		},
		{
			"name": "Register unsuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "114a8254-c84f-4d72-8b8d-c46fae7229a5",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b3852bfd-50b7-47a4-8f25-88bd38120d29",
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"id": "14fd4d4e-7d77-4670-a5bc-055aef06bb61",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"sydney@fife\"\n}"
				},
				"url": "{{base_url}}api/register"
			},
			"response": []
		},
		{
			"name": "Login-successfullt",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4fd22add-fd4f-4b98-964e-518a721924ee",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1c0f63a8-fc3b-463c-b228-597936a7a08f",
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"id": "6102a915-e264-4b06-adca-27c6c750d87d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}api/login"
			},
			"response": []
		},
		{
			"name": "Login-unsuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "671e4cd0-501f-4bc6-9265-ee5f7287d8a4",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "96fa3035-692b-4e52-a1ad-16d84029689f",
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"id": "98050d23-1701-45ec-8f96-e65d9dcdee98",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"peter@klaven\"\n}"
				},
				"url": "{{base_url}}api/login"
			},
			"response": []
		},
		{
			"name": "Delayed response",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1b74413-705c-4cc3-a7f8-87478e1aed5f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "67055c9c-94d5-4c93-b46a-ce327945cb76",
						"exec": [],
						"type": "text/javascript"
					}
				}
			],
			"id": "63c0971c-2d6d-4af7-a7b3-db066a4640d1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}api/users?delay=3",
					"host": [
						"{{base_url}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List all resources",
			"id": "115d798e-b6ed-4400-92be-546be0e390fd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8e1b6c94-cf53-4b99-b6f3-b1faecad5912",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "836245a2-9934-400f-91c3-b6b3031559db",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Response time is less than 1 sec\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(1000);",
					"});"
				]
			}
		}
	]
}